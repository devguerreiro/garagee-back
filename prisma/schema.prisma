generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  public_id    String         @unique @default(uuid())
  name         String
  apartment    String
  username     String         @unique
  password     String
  created_at   DateTime       @default(now())
  is_active    Boolean        @default(true)
  building_id  Int
  building     Building       @relation(fields: [building_id], references: [id])
  ParkingSpace ParkingSpace[]
  Booking      Booking[]
}

model Building {
  id        Int    @id @default(autoincrement())
  public_id String @unique @default(uuid())
  name      String
  cnpj      String @unique
  User      User[]
}

model ParkingSpace {
  id         Int       @id @default(autoincrement())
  public_id  String    @unique @default(uuid())
  identifier String
  guidance   String
  is_covered Boolean
  owner_id   Int
  owner      User      @relation(fields: [owner_id], references: [id])
  Booking    Booking[]
}

enum BookingStatus {
  APPROVED
  REFUSED
  PENDING
}

model Booking {
  id               Int           @id @default(autoincrement())
  public_id        String        @unique @default(uuid())
  claimant_id      Int
  claimant         User          @relation(fields: [claimant_id], references: [id])
  parking_space_id Int
  parking_space    ParkingSpace  @relation(fields: [parking_space_id], references: [id])
  booked_at        DateTime      @default(now())
  booked_from      DateTime
  booked_to        DateTime
  updated_at       DateTime      @updatedAt
  status           BookingStatus @default(PENDING)
}
